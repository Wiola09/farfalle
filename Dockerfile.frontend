# Use a specific version of node:18-alpine to ensure reproducibility
FROM node:18-alpine

# Combine RUN commands to reduce the number of layers, and clean up to minimize the image size
RUN apk add --no-cache libc6-compat && \
    corepack enable

WORKDIR /app

# We only copy the package.json and pnpm-lock.yaml or package-lock.json first to leverage Docker cache
COPY src/frontend/package.json src/frontend/pnpm-lock.yaml ./

# Install dependencies
RUN pnpm i --prod --frozen-lockfile

# Copy the rest of the code
COPY src/frontend .

# It is good to specify a non-root user to run your container
RUN addgroup -S appgroup && adduser -S appuser -G appgroup
USER appuser

# Set environment to production mode
ENV NODE_ENV=production

# The application now runs in production mode, assuming your app is designed to do so.
CMD ["pnpm", "start"]

# Expose the port your app runs on
EXPOSE 3000
